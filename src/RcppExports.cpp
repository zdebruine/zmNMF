// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// zm_nmf
Rcpp::List zm_nmf(const arma::mat& A, const unsigned int k, const unsigned int max_iter, const double rel_tol, const int n_threads, const bool verbose, const unsigned int inner_max_iter, const double inner_rel_tol, const int trace, double alpha);
RcppExport SEXP _zmNMF_zm_nmf(SEXP ASEXP, SEXP kSEXP, SEXP max_iterSEXP, SEXP rel_tolSEXP, SEXP n_threadsSEXP, SEXP verboseSEXP, SEXP inner_max_iterSEXP, SEXP inner_rel_tolSEXP, SEXP traceSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type k(kSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type rel_tol(rel_tolSEXP);
    Rcpp::traits::input_parameter< const int >::type n_threads(n_threadsSEXP);
    Rcpp::traits::input_parameter< const bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type inner_max_iter(inner_max_iterSEXP);
    Rcpp::traits::input_parameter< const double >::type inner_rel_tol(inner_rel_tolSEXP);
    Rcpp::traits::input_parameter< const int >::type trace(traceSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(zm_nmf(A, k, max_iter, rel_tol, n_threads, verbose, inner_max_iter, inner_rel_tol, trace, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_zmNMF_zm_nmf", (DL_FUNC) &_zmNMF_zm_nmf, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_zmNMF(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
